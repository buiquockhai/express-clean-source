name: Build And Release

on:
  push:
    branches:
      - 'release'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.manifests.outputs.tag }}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate manifests
        id: manifests
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          echo "tags=$(make tags)" >> $GITHUB_OUTPUT
          echo "tag=$(make tag)" >> $GITHUB_OUTPUT
        working-directory: ./

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./devops/Dockerfile
          push: true
          tags: ${{ steps.manifests.outputs.tags }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Remote access EC2 and replace image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_IP }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SECRET_KEY }}
          port: 22
          script: |
            export LITERATE_RUNNER=$(docker ps --filter=name=literate --format={{.Names}})
            [[ ! -z $LITERATE_RUNNER ]] && docker rm -f literate
            docker run --name literate \
            --log-driver=loki \
            --log-opt loki-url="https://${{ secrets.LOKI_USERNAME }}:${{ secrets.LOKI_PASSWORD }}@logs-prod-011.grafana.net/loki/api/v1/push" \
            --log-opt loki-retries=5 \
            --log-opt loki-batch-size=400 \
            --env PG_USERNAME=${{ secrets.PG_USERNAME }} \
            --env PG_PASSWORD=${{ secrets.PG_PASSWORD }} \
            --env PG_HOST=${{ secrets.PG_HOST }} \
            --env PG_PORT=${{ secrets.PG_PORT }} \
            --env PG_DATABASE=${{ secrets.PG_DATABASE }} \
            -p 8000:8000 -d \
            ${{ secrets.DOCKERHUB_USERNAME }}/literate:${{ needs.build.outputs.tag }}
            
